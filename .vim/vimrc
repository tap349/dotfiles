"*******************************************************************************
"
" http://vimhelp.appspot.com/vim_faq.txt.html
" idiomatic vimrc: https://gist.github.com/romainl/9ecd7b09a693816997ba
"
" version 7.4 and higher support ~/.vim/vimrc location
"
" these keys generate the same characters:
"
" - <Tab> and <C-i>
" - <CR> and <C-m>
" - <Esc> and <C-[>
" - <C-S-h> and <C-h> (any character)
"
"*******************************************************************************

"===============================================================================
"
" general options
"
"===============================================================================

" syntax is on even without this command

" using `syntax on` might cause syntax highlighting to be lost partially
" after sourcing vimrc (say, in rspec files)
"
" the only downside of not using `syntax on` is that RGB values lose their
" colors after sourcing vimrc - use `filetype detect` or reload file then
"syntax on

set noautochdir
" https://stackoverflow.com/a/9605639/3632318
" also unset balloonexpr option in ruby.vim
set noballooneval
set nocompatible
set nospell
set nowrap

"-------------------------------------------------------------------------------
" backup and swapfile
"-------------------------------------------------------------------------------

" https://gist.github.com/nepsilon/003dd7cfefc20ce1e894db9c94749755
" backup
" uncomment `augroup backup` if `backup` option is set
set backup
"set backupdir=~/.vim/backup//
" http://vim.wikia.com/wiki/Editing_crontab
"set backupskip+=/private/tmp/*

" swapfile
set noswapfile
"set directory=~/.vim/tmp//

"-------------------------------------------------------------------------------
" buffers
"-------------------------------------------------------------------------------

" https://medium.com/usevim/vim-101-set-hidden-f78800142855
set hidden
" http://vim.wikia.com/wiki/Using_tab_pages
" `newtab` causes all quickfix files to be opened in new tab
set switchbuf=usetab

"-------------------------------------------------------------------------------
" completion
"-------------------------------------------------------------------------------

" https://stackoverflow.com/a/2460593/3632318
" https://github.com/tpope/vim-sensible/issues/51#issuecomment-19865228
" https://medium.com/usevim/set-complete-e76b9f196f0f
" :help cpt
set complete-=t,i
" menu,preview - default
" longest option causes typed characters to disappear during completion
"set completeopt+=longest

set wildmenu
" don't change the order of options - it matters
set wildmode=longest:full,full
" specifying directory with asterisk on both ends (say, */public/*)
" is known to cause problems with spec/vcr_cassettes/ directory: it
" is collapsing after being refreshed in NerdTree
"
" log/, tmp/, deps/ and node_modules/ are usually already filtered
" out by project's .gitignore
set wildignore+=.git/*,
      \*/public,
      \*/spec/vcr_cassettes

"-------------------------------------------------------------------------------
" diff
"-------------------------------------------------------------------------------

" show filler lines, use vertical split by default
set diffopt=filler,vertical

"-------------------------------------------------------------------------------
" editing
"-------------------------------------------------------------------------------

set colorcolumn=81
"exec 'set colorcolumn=' . join(range(81,250), ',')

" using cpo-$ quite too often breaks syntax highligting
" (say, when replacing `set` in `Neko.Achievement.Store.set(store)`
" or when replacing `game` with `game` in `let(:game)` using `ce`) -
" at first I thought regexpengine was the culprit.
"set cpoptions+=$

"-------------------------------------------------------------------------------
" folding
"
" http://vimcasts.org/episodes/how-to-fold/
"-------------------------------------------------------------------------------

set foldenable
set foldlevelstart=10
" syntax folding might not work in some cases (e.g. in spec files)
set foldmethod=indent
set foldnestmax=10

"-------------------------------------------------------------------------------
" formatting
"-------------------------------------------------------------------------------

" NOTE: these options might be overriden by filetype plugins!
"
" t - auto-wrap text using textwidth
" c - auto-wrap comments using textwidth
" r - insert comment leader after <CR> in insert mode
" o - insert comment leader after 'o' or 'O' in normal mode
" q - allow formatting of comments with 'gq'
" l - don't break long lines in insert mode
" j - remove comment leader when joining lines
"
" `t` option is also removed by most file type plugins
set formatoptions-=tc
set formatoptions+=rj

"-------------------------------------------------------------------------------
" indentation
"-------------------------------------------------------------------------------

" dumb auto indentation - copy indentation from previous line
" it's automatically enabled with plugin-specific indentation on
"set autoindent

set expandtab
set shiftround
set shiftwidth=2
set softtabstop=2
set tabstop=2

" :help cino-:
" the same indent for `switch()` and `case` in JavaScript
set cinoptions=:0

"-------------------------------------------------------------------------------
" navigation
"-------------------------------------------------------------------------------

set scrolloff=2

"-------------------------------------------------------------------------------
" search
"-------------------------------------------------------------------------------

" https://medium.com/@haya14busa/incsearch-vim-is-dead-long-live-incsearch-2b7070d55250
"
" also enables incremental highlight feature (patch 8.0.1238) -
" highlight all matches while incremental searching
set hlsearch
set incsearch

set ignorecase
set smartcase

"-------------------------------------------------------------------------------
" splitting
"-------------------------------------------------------------------------------

set splitbelow
set splitright

"-------------------------------------------------------------------------------
" visualize invisible characters
"-------------------------------------------------------------------------------

set list
set listchars=nbsp:·,tab:▸·,trail:·,precedes:«,extends:»

"===============================================================================
"
" performance tweaks
"
" http://stackoverflow.com/questions/16902317
"
"===============================================================================

" commented as a result of ongoing fight with losing highlighting
" (fixes losing highlighting after inlining action constant in
" TeamAdminsPage#componenDidMount)
"set lazyredraw

" most problems with disappearing highlighting are solved by
" removing `cpo-$` option but some problems still persist:
" e.g. sometimes when I go to the end of line and switch to
" insert mode (`A`) highlighting is getting lost again -
" that's why I've switched to regexpengine=0 (autodetection).
set regexpengine=0
set synmaxcol=250
" https://github.com/vim/vim/issues/2049
set maxmempattern=2000

"===============================================================================
"
" look and feel
"
"===============================================================================

" disable beeping
set vb t_vb=

"-------------------------------------------------------------------------------
" colors
"-------------------------------------------------------------------------------

"set transparency=0

let g:solarized_bold = 1
let g:solarized_contrast = 'high'
"let g:solarized_diffmode = 'normal'
"let g:solarized_italic = 0
"let g:solarized_underline = 1

"colorscheme PaperColor
"colorscheme github
"colorscheme ir_black_morr
"colorscheme ir_black_tap
"colorscheme scheakur
"colorscheme sebocean_dasha
"colorscheme solarized
"colorscheme summerfruit_tap
"colorscheme vylight
"colorscheme earendel
"colorscheme autumn
"colorscheme bclear
"colorscheme plain

"if getcwd() =~ 'iceperk$\|sith$'
if getcwd() =~ 'iceperk$'
  set background=light
  colorscheme solarized
else
  set background=light
  colorscheme github
endif

"if hostname() == 'MacBook-Pro-Personal.local'
"  set background=light
"  colorscheme github
"else
"  set background=light
"  colorscheme PaperColor
"endif

"-------------------------------------------------------------------------------
" font
"-------------------------------------------------------------------------------

"set linespace=6
"set guifont=Andale\ Mono:h15
"set linespace=2
"set guifont=Andale\ Mono\ MT\ Std:h14
"set linespace=5
"set guifont=Cousine:h15
"set linespace=4
"set guifont=Droid\ Sans\ Mono:h14
"set linespace=5
"set guifont=Fira\ Mono:h14
"set linespace=2
"set guifont=Inconsolata-dz:h14
"set linespace=2
"set guifont=Inconsolata\ LGC:h15
"set linespace=3
"set guifont=MonacoB\ for\ Powerline:h16
"set linespace=4
"set guifont=Iosevka:h16
"set linespace=4
"set guifont=D2Coding:h16

"set linespace=5
"set guifont=Andale\ Mono\ MT\ Std:h14
set linespace=1
set guifont=Input:h14

"-------------------------------------------------------------------------------
" gui options
"-------------------------------------------------------------------------------

" NOTE: flags 'rL' must be added in exactly this order (IDK why)!
"
" c - use console dialogs instead of gui ones
" r - right scrollbar is always present
" L - left scrollbar is present when there's a vertically split window
set guioptions+=c
set guioptions-=rL

" http://stackoverflow.com/a/39816241/3632318
set guicursor+=a:blinkon600-blinkoff400
"set guicursor+=a:blinkon0

"-------------------------------------------------------------------------------
" indicators
"-------------------------------------------------------------------------------

" highlight current line (might slow down navigation)
" this is the main cause of sluggish scrolling!
" set after colorscheme - or else it can be redefined inside it
set nocursorline
" hide mode indicator
set noshowmode
" show number of lines or characters selected in bottom right corner
set showcmd
" always show tabbar
set showtabline=2

" winwidth(0) here is the width of last closed mvim window
" (when there were no other running mvim instances) -
" it's somehow persisted when mvim app is closed.
" real winwidth(0) is set only after vimrc is sourced.
"
" don't show line numbers on macbook
if winwidth(0) < 160
  set nonumber
else
  set number
endif

"-------------------------------------------------------------------------------
" startup
"-------------------------------------------------------------------------------

set shortmess+=I

" /usr/local/bin/zsh - homebrew zsh (use it)
" /bin/zsh - pre-installed zsh
"
" both zshs work with syntastic
set shell=/usr/local/bin/zsh
" http://stackoverflow.com/a/4642855/3632318
" (see last comment - using interactive shell can create problems)
"set shellcmdflag=-ic

" maximize on startup
" NOTE: setting columns to 999 maximizes the 1st column when using vimdiff!
"set lines=999
"set columns=999

"===============================================================================
"
" source external vim files
"
"===============================================================================

source ~/.vim/abbreviations.vim
source ~/.vim/mappings.vim
source ~/.vim/autocommands.vim
source ~/.vim/plugins.vim
